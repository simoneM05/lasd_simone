LASD Libraries 2025

~*~#~*~ Welcome to the LASD Test Suite ~*~#~*~ 

Begin of Vector<int> Test:
 1 (0) The container is empty: Correct!
 2 (0) The front of the linear container is "Access to an empty vector.": Correct!
 3 (0) The back of the linear container is "Access to an empty vector.": Correct!
 4 (0) Set of the linear container at index "1" with value "0": "Access at index 1; vector size 0.": Correct!
 5 (0) Get of the linear container at index "2" with value "Access at index 2; vector size 0.": Correct!
 6 (0) Data "0" does not exist: Correct!
 7 (0) Executing traverse in pre order - : Correct!
 8 (0) Executing traverse in post order - : Correct!
 9 (0) Executing fold in pre order - obtained value is "0": Correct!
 10 (0) Executing fold in post order - obtained value is "0": Correct!
 11 (0) The container is not empty: Correct!
 12 (0) The container has size 3: Correct!
 13 (0) Set of the linear container at index "0" with value "4": Correct!
 14 (0) Set of the linear container at index "1" with value "3": Correct!
 15 (0) Set of the linear container at index "2" with value "1": Correct!
 16 (0) The front of the linear container is "4": Correct!
 17 (0) The back of the linear container is "1": Correct!
 18 (0) Setting the front of the linear container to "5": Correct!
 19 (0) Setting the back of the linear container to "4": Correct!
 20 (0) Data "4" does exist: Correct!
 21 (0) Executing traverse in pre order - 5 3 4 : Correct!
 22 (0) Executing traverse in post order - 4 3 5 : Correct!
 23 (0) Executing fold in pre order - obtained value is "12": Correct!
 24 (0) Executing fold in post order - obtained value is "60": Correct!
 25 (0) Executing traverse in pre order - 3 4 5 : Correct!
 26 (0) Executing traverse in post order - 5 4 3 : Correct!
 27 (0) Executing fold in post order - obtained value is "12": Correct!
End of Vector<int> Test! (Errors/Tests: 0/27)

Begin of Vector<double> Test:
 1 (0) The container is not empty: Correct!
 2 (0) The container has size 3: Correct!
 3 (0) Set of the linear container at index "0" with value "5.5": Correct!
 4 (0) Set of the linear container at index "1" with value "3.3": Correct!
 5 (0) Set of the linear container at index "2" with value "1.1": Correct!
 6 (0) The front of the linear container is "5.5": Correct!
 7 (0) The back of the linear container is "1.1": Correct!
 8 (0) Data "3.3" does exist: Correct!
 9 (0) Executing fold in pre order - obtained value is "9.9": Correct!
 10 (0) Executing fold in post order - obtained value is "19.965": Correct!
End of Vector<double> Test! (Errors/Tests: 0/10)

Begin of Vector<string> Test:
 1 (0) The container is not empty: Correct!
 2 (0) The container has size 2: Correct!
 3 (0) Set of the linear container at index "0" with value "A": Correct!
 4 (0) Set of the linear container at index "1" with value "B": Correct!
 5 (0) The front of the linear container is "A": Correct!
 6 (0) The back of the linear container is "B": Correct!
 7 (0) Data "A" does exist: Correct!
 8 (0) Executing map in pre order - : Correct!
 9 (0) Executing traverse in pre order - A  B  : Correct!
 10 (0) Executing fold in pre order - obtained value is "XA B ": Correct!
 11 (0) Executing fold in post order - obtained value is "XB A ": Correct!
 12 (0) Data "A" does not exist: Correct!
 13 (0) The two vectors are equal: Correct!
 14 (0) Executing map in pre order - : Correct!
 15 (0) The two vectors are not equal: Correct!
 16 (0) Executing fold in pre order - obtained value is "?A !B !": Correct!
 17 (0) Executing fold in pre order - obtained value is "?A B ": Correct!
 18 (0) Executing fold in pre order - obtained value is "?A B ": Correct!
 19 (0) Set of the linear container at index "1" with value "": "Access at index 1; vector size 0.": Correct!
 20 (0) Set of the linear container at index "0" with value "X": Correct!
 21 (0) The container is empty: Correct!
End of Vector<string> Test! (Errors/Tests: 0/21)

Exercise 1A - Vector (Errors/Tests: 0/58)

Begin of List<int> Test:
 1 (0) The container is empty: Correct!
 2 (0) The container has size 0: Correct!
 3 (0) The front of the linear container is "Access to an empty list.": Correct!
 4 (0) The back of the linear container is "Access to an empty list.": Correct!
 5 (0) Data "0" does not exist: Correct!
 6 (0) Executing traverse in pre order - : Correct!
 7 (0) Executing traverse in post order - : Correct!
 8 (0) Executing fold in pre order - obtained value is "0": Correct!
 9 (0) Executing fold in post order - obtained value is "0": Correct!
 10 (0) Remove from the list of "Access to an empty list.": Correct!
 11 (0) FrontNRemove from the list of "Access to an empty list.": Correct!
 12 (0) Insert at the back of the list the value "4": Correct!
 13 (0) Insert at the front of the list the value "5": Correct!
 14 (0) Insert at the front of the list the value "9": Correct!
 15 (0) Insert at the back of the list the value "2": Correct!
 16 (0) Insert at the front of the list the value "1": Correct!
 17 (0) The front of the linear container is "1": Correct!
 18 (0) The back of the linear container is "2": Correct!
 19 (0) Setting the front of the linear container to "2": Correct!
 20 (0) Setting the back of the linear container to "6": Correct!
 21 (0) Get of the linear container at index "3" with value "4": Correct!
 22 (0) Set of the linear container at index "3" with value "3": Correct!
 23 (0) Data "4" does not exist: Correct!
 24 (0) Executing traverse in pre order - 2 9 5 3 6 : Correct!
 25 (0) Executing traverse in post order - 6 3 5 9 2 : Correct!
 26 (0) Executing fold in pre order - obtained value is "25": Correct!
 27 (0) Executing fold in post order - obtained value is "1620": Correct!
 28 (0) Remove from the list of "2": Correct!
 29 (0) FrontNRemove from the list of "9": Correct!
 30 (0) Executing fold in post order - obtained value is "90": Correct!
 31 (0) The two lists are equal: Correct!
 32 (0) Executing map in pre order - : Correct!
 33 (0) The two lists are not equal: Correct!
 34 (0) Insert at the front of the list the value "0": Correct!
 35 (0) Insert at the back of the list the value "0": Correct!
 36 (0) The two lists are not equal: Correct!
 37 (0) The two lists are equal: Correct!
 38 (0) Remove from the list of "0": Correct!
 39 (0) FrontNRemove from the list of "6": Correct!
 40 (0) Executing fold in pre order - obtained value is "11": Correct!
 41 (0) Executing fold in pre order - obtained value is "17": Correct!
 42 (0) Executing map in pre order - : Correct!
 43 (0) Executing fold in pre order - obtained value is "14": Correct!
 44 (0) Insert at the front of the list the value "6": Correct!
 45 (0) Insert at the back of the list the value "8": Correct!
 46 (0) Remove from the list of "6": Correct!
 47 (0) Insert at the back of the list the value "7": Correct!
 48 (0) Executing fold in pre order - obtained value is "30": Correct!
 49 (0) The container is empty: Correct!
 50 (0) The container has size 0: Correct!
End of List<int> Test! (Errors/Tests: 0/50)

Begin of List<double> Test:
 1 (0) The container is empty: Correct!
 2 (0) The container has size 0: Correct!
 3 (0) Insert at the back of the list the value "-2.5": Correct!
 4 (0) Insert at the back of the list the value "2.5": Correct!
 5 (0) Insert at the back of the list the value "0.5": Correct!
 6 (0) Insert at the front of the list the value "3.3": Correct!
 7 (0) Insert at the front of the list the value "5.5": Correct!
 8 (0) Insert at the back of the list the value "1.1": Correct!
 9 (0) The front of the linear container is "5.5": Correct!
 10 (0) The back of the linear container is "1.1": Correct!
 11 (0) Data "0" does not exist: Correct!
 12 (0) Executing traverse in pre order - 5.5 3.3 0.5 1.1 : Correct!
 13 (0) Executing traverse in post order - 1.1 0.5 3.3 5.5 : Correct!
 14 (0) Executing fold in pre order - obtained value is "10.4": Correct!
 15 (0) Executing fold in post order - obtained value is "9.9825": Correct!
End of List<double> Test! (Errors/Tests: 0/15)

Begin of List<string> Test:
 1 (0) The container is empty: Correct!
 2 (0) The container has size 0: Correct!
 3 (0) Insert at the front of the list the value "A": Correct!
 4 (0) Insert at the back of the list the value "B": Correct!
 5 (0) The front of the linear container is "A": Correct!
 6 (0) The back of the linear container is "B": Correct!
 7 (0) Data "B" does exist: Correct!
 8 (0) Executing map in pre order - : Correct!
 9 (0) Executing traverse in pre order - A  B  : Correct!
 10 (0) Executing fold in pre order - obtained value is "XA B ": Correct!
 11 (0) Executing fold in post order - obtained value is "XB A ": Correct!
 12 (0) Data "B" does not exist: Correct!
 13 (0) The two lists are equal: Correct!
 14 (0) Remove from the list of "A ": Correct!
 15 (0) The two lists are not equal: Correct!
 16 (0) The two lists are equal: Correct!
 17 (0) Insert at the back of the list the value "A": Correct!
 18 (0) Insert at the front of the list the value "C": Correct!
 19 (0) The two lists are not equal: Correct!
 20 (0) Executing fold in pre order - obtained value is "?CB A": Correct!
End of List<string> Test! (Errors/Tests: 0/20)

Exercise 1A - List (Errors/Tests: 0/85)

Begin of Vector/List<int> Test:
 1 (0) Set of the linear container at index "0" with value "-1": Correct!
 2 (0) Set of the linear container at index "1" with value "0": Correct!
 3 (0) Set of the linear container at index "2" with value "1": Correct!
 4 (0) Insert at the front of the list the value "1": Correct!
 5 (0) Insert at the front of the list the value "0": Correct!
 6 (0) Insert at the front of the list the value "-1": Correct!
 7 (0) The two linear containers are equal: Correct!
 8 (0) The two vectors are equal: Correct!
 9 (0) The two vectors are equal: Correct!
 10 (0) The two lists are equal: Correct!
 11 (0) The two lists are equal: Correct!
End of Vector/List<int> Test! (Errors/Tests: 0/11)

Begin of Vector/List<double> Test:
 1 (0) Set of the linear container at index "0" with value "-0.5": Correct!
 2 (0) Set of the linear container at index "1" with value "0": Correct!
 3 (0) Set of the linear container at index "2" with value "0.5": Correct!
 4 (0) Insert at the back of the list the value "-0.5": Correct!
 5 (0) Insert at the back of the list the value "0": Correct!
 6 (0) Insert at the back of the list the value "0.5": Correct!
 7 (0) The two linear containers are equal: Correct!
 8 (0) The two vectors are equal: Correct!
 9 (0) The two vectors are equal: Correct!
 10 (0) The two lists are equal: Correct!
 11 (0) The two lists are equal: Correct!
End of Vector/List<double> Test! (Errors/Tests: 0/11)

Begin of Vector/List<string> Test:
 1 (0) Set of the linear container at index "0" with value "A": Correct!
 2 (0) Set of the linear container at index "1" with value "B": Correct!
 3 (0) Set of the linear container at index "2" with value "C": Correct!
 4 (0) Insert at the front of the list the value "B": Correct!
 5 (0) Insert at the back of the list the value "C": Correct!
 6 (0) Insert at the front of the list the value "A": Correct!
 7 (0) The two linear containers are equal: Correct!
 8 (0) The two vectors are equal: Correct!
 9 (0) The two vectors are equal: Correct!
 10 (0) The two lists are equal: Correct!
 11 (0) The two lists are equal: Correct!
 12 (0) The container has size 3: Correct!
 13 (0) Executing traverse in pre order - A B C : Correct!
 14 (0) The container has size 3: Correct!
 15 (0) Executing traverse in pre order - A B C : Correct!
 16 (0) The two lists are equal: Correct!
 17 (0) The container has size 3: Correct!
 18 (0) Executing traverse in pre order -    : Correct!
 19 (0) Executing traverse in pre order - A B C : Correct!
 20 (0) The two vectors are not equal: Correct!
 21 (0) The container has size 3: Correct!
 22 (0) Executing traverse in pre order - A B C : Correct!
 23 (0) The container has size 3: Correct!
 24 (0) Executing traverse in pre order - A B C : Correct!
 25 (0) The two vectors are equal: Correct!
 26 (0) The container has size 3: Correct!
 27 (0) Executing traverse in pre order -    : Correct!
 28 (0) Executing traverse in pre order - A B C : Correct!
 29 (0) The two lists are not equal: Correct!
End of Vector/List<string> Test! (Errors/Tests: 0/29)

Exercise 1A - Vector/List (Errors/Tests: 0/51)

Exercise 1A (Simple Test) (Errors/Tests: 0/194)

Exercise 1 (Simple Test) (Errors/Tests: 0/194)
Goodbye!
